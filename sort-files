#!/usr/bin/python3

# sort files
# sort current directory files into new directories created after their extension name

from custom import get_currentLocation, get_childItems, get_fileExtension, clean_fileName, get_fileBaseName
from os import path, mkdir
from shutil import move

cwd = get_currentLocation()
files_list = get_childItems(cwd)

# [1/1]
try:
    for file in files_list:

        file_extension = get_fileExtension(file)
        target_directory = path.join(cwd, file_extension)
        parent_directory = "/".join(target_directory.split("/",)[:-1])
        target_directoryBaseName = get_fileBaseName(str(target_directory))
        parent_directoryBaseName = get_fileBaseName(parent_directory)

        file_nameCleaned = clean_fileName(file)

        # rename items
        move(file, file_nameCleaned)

        # sort items
        if path.isfile(path.join(cwd, file_nameCleaned)):
            if path.exists(target_directory):
                if not path.exists(path.join(target_directory, file_nameCleaned)):
                    move(file_nameCleaned, target_directory)
                else:
                    print(f"a file '{file_nameCleaned}' already exists in {target_directory}")
            else:
                if not target_directoryBaseName in parent_directory:
                    mkdir(target_directory)
                    if not path.exists(path.join(target_directory, file_nameCleaned)):
                        move(file_nameCleaned, target_directory)
                    else:
                        print(f"a file '{file_nameCleaned}' already exists in {target_directory}")
except:
    print("an exception occurred [1 / 1]")
else:
    print("files sorted.")
